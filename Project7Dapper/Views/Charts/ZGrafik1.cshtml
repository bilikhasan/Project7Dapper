@model IEnumerable<Project7Dapper.Dtos.MostSeenDiseaseIn2020Dto>

@{
    ViewData["Title"] = "ZGrafik1";
    Layout = "~/Views/_DashboardLayout.cshtml";
}
<div style="margin-left:100px">
<h3>Bar Chart</h3>
</div>

<br />
<br />

<div style="width: 800px; height: 800px; margin-left: 100px;">
    <canvas id="myChart" width="800" height="800"></canvas>
</div>

@* <canvas id="myChart" width="500" height="350" style="margin-left:250px"></canvas>
 *@
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    var labels = [];
    var values = [];
    var colors = ['rgba(255, 99, 132, 0.5)', 'rgba(54, 162, 235, 0.5)', 'rgba(255, 206, 86, 0.5)',
                  'rgba(75, 192, 192, 0.5)', 'rgba(153, 102, 255, 0.5)', 'rgba(255, 159, 64, 0.5)'];
    var borderColors = ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'];

    @foreach (var item in Model)
    {
        @: labels.push("@item.Disease_Name");
        @: values.push(@item.CaseCount);
    }

    // Bar sayısına göre renkleri tekrarlamak için
    var dynamicColors = labels.map((_, i) => colors[i % colors.length]);
    var dynamicBorderColors = labels.map((_, i) => borderColors[i % borderColors.length]);

    var ctx = document.getElementById('myChart').getContext('2d');
    new Chart(ctx, {
        type: 'bar',
        data: {
            labels: labels,
            datasets: [{
                label: 'Hastalık Bazında Vaka Sayısı (2020)',
                data: values,
                backgroundColor: dynamicColors,
                borderColor: dynamicBorderColors,
                borderWidth: 1
            }]
        },
        options: {
            responsive: false,
            maintainAspectRatio: false,
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script>