@model List<Project7Dapper.Dtos.CountriesWithTheMostDoctors>


@{
    ViewData["Title"] = "ZGrafik7";
    Layout = "~/Views/_DashboardLayout.cshtml";
}

<div style="margin-left:100px">
    <h3>Polar Area Chart</h3>
</div>

<br />

<div style="width: 800px; height: 800px; margin-left: 100px;">
    <canvas id="myPolarChart" width="800" height="800"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    var labels = [];
    var values = [];
    var colors = ['rgba(255, 99, 132, 0.5)', 'rgba(54, 162, 235, 0.5)', 'rgba(255, 206, 86, 0.5)',
                  'rgba(75, 192, 192, 0.5)', 'rgba(153, 102, 255, 0.5)', 'rgba(255, 159, 64, 0.5)'];
    var borderColors = ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'];

    @foreach (var item in Model)
    {
        @: labels.push("@item.Country");
        @: values.push(@item.Avg_Doctors);
    }

    // Polar Area Chart için renkleri döngüyle atıyoruz
    var dynamicColors = labels.map((_, i) => colors[i % colors.length]);

    var ctx = document.getElementById('myPolarChart').getContext('2d');
    new Chart(ctx, {
        type: 'polarArea',
        data: {
            labels: labels,
            datasets: [{
                label: 'Average Doctors by Country',
                data: values,
                backgroundColor: dynamicColors,
                borderColor: dynamicColors,
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false
        }
    });
</script>
